Elastic Ip Address
------------------
For each and every resource that we provision on aws cloud platform, it assigns 2 ip addresses which are
1. private ip address
2. public ip address

1. private ip address
The private ip address is the one that is generated by the cloud platform within the range of vpc and subnet and assigned to the resource that is created within the subnet of the vpc. There are 2 reasons why aws cloudplatform assigns an private ip address
	1.1 to let us identify and access the resource uniquely within the vpc network, it assigns the private ip address
	1.2 it is always advised or recommended to access an resource through private ip address within the vpc instead of using public ip address, because the latency at which the resource can be accessed is very minimal because of internal network of the cloud platform
	
2. public ip address
For the resources that are provisioned within the public subnet, we can let the aws assign public ip address, so that we can access these resources over the public network. Incase if we assign an public ip address to a private subnet resource, it would not become accessible over the public network.
	
By default for every public subnet resource the aws cloud platform will not assign public ip address
There are 2 ways we can have public ip address being assigned to an resource
1. subnet level
while creating an public subnet, we can enable an setting at subnet level asking to assign public ip address to all the resources provisioned within that subnet. So that aws cloud platform automatically assigns public ip address to all the resources that are provisioned within that subnet.
	
2. resource level
for each resource while provisioning we can explicitly enable asking aws to assign the public ip address

There are 2 types of public ip address are there supported by aws cloudplatform
1. empheral public ip address
2. elastic public ip address

1. empheral public ip address
By default for an resource we provision the aws cloudplatform will not assign public ip address even though we provision the resource in public subnet. As discussed above we need to enable public ip address either at subnet-level or resource-level during the time of provisioning the resource.
empheral public ip address are the temporary addresses that are generated and assigned to the resources by aws cloudplatform and would be changed during an restart or stop/start of the resource. So it is not advised to use empheral ip addresses for production usage and these ip addresses are provided for the sake of using them in lower environments like dev,qa, stage, uat etc. The empheral ip addresses are free to be used.
	
post provisioning of the resource also we can assign public ip address to an resource. we need to goto network interface of the ec2 instance and attach an new network interface card and choose assign public ip address

2. elastic ip address
If we wanted the resources to be assigned with an permanent ip address, then we need to use elastic ip address.
The AWS Cloud platform let us create an elastic ip pool in which we can reserve upto #5 public ip address per account, which are initially in un-assigned status.
	
Now while provisioning the resources, we can choose to assign one of the public ip address from the elastic pool which is un-assigned status so that upon deleting or de-provisioning the resource the ip address would be returned back to the elastic pool with status as again un-assigned. 
In this way we never loose the public ip address and would always be reserved in our pool no matter it is in-use or not

note: elastic public ip address are chargeable


1. enabling public ip address at subnet level (empheral)
2. restart of an resource would change the empheral ip address or not?
3. assigning an elastic ip address to an resource
4. post-provisioning of the ec2 instance how to assign an empheral or elastic ip address?
For all the above examples we need public subnet

	
	
rentalcarsec2: 13.233.233.23
	             13.127.183.252
	
	
	























































